# -*- coding: utf-8 -*-
"""KNN_IrisDataset.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15QlZY6CMhzPcSAf0w_T-MgUYXDvHfTPi
"""

from sklearn import datasets, metrics
import pandas as pd
from sklearn.model_selection import train_test_split, cross_val_predict, cross_val_score
from sklearn.neighbors import KNeighborsClassifier
import numpy as np
import matplotlib.pyplot as plt

# Load the iris dataset
iris = datasets.load_iris()  # Call the iris dataset from sklearn
print(iris.DESCR)
X = pd.DataFrame(iris.data, columns=iris.feature_names)  # load the dataset as a pandas data frame
y = iris.target  # define the target variable (dependent variable) as y
print(X.shape, y.shape)
print(X, y)

from pandas.core.common import random_state

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)
print('X_train:', X_train.shape, 'y_train:', y_train.shape)
print('X_test:', X_test.shape, 'y_test:', y_test.shape)

ks = range(1, 26)
scores = {}
scores_list = []
for k in ks:
    knn = KNeighborsClassifier(n_neighbors=k, p=2)
    knn.fit(X_train, y_train)
    y_pred = knn.predict(X_test)
    scores[k] = metrics.accuracy_score(y_test, y_pred)
    scores_list.append(metrics.accuracy_score(y_test, y_pred))
print(scores)
print(scores_list)

plt.plot(ks, scores_list)
